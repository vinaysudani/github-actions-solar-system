name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: node:20
          
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
            path: ~/.npm
        
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Code Coverage
        run: npm run coverage
        continue-on-error: true

      - name: Archive Code Coverage Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Docker Login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: vinaysudani
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Docker Build and Push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ghcr.io/vinaysudani/solar-system:${{ github.sha }}
        
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment: development
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.28.1
        
      - name: Setup Kubeconfig
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      
      - name: Verify kubectl and kubeconfig
        run: kubectl version -o yaml

      - name: Get Ingres IP
        run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip})" >> $GITHUB_ENV
      
      - name: replace Placeholders
        uses: cschleiden/replace-tokens@v1.3
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ghcr.io/vinaysudani/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}
      
      - name: check updated files
        run: cat kubernetes/development/*.yaml

    integration-testing:
      name: Integration Testing
      needs: dev-deploy
      uses: ./.github/workflows/reusable-workflow.yml
      with:
        ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}